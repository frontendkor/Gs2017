// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$check-ic-name: 'check-ic'
$check-ic-x: 0px
$check-ic-y: 8px
$check-ic-offset-x: 0px
$check-ic-offset-y: -8px
$check-ic-width: 16px
$check-ic-height: 13px
$check-ic-total-width: 29px
$check-ic-total-height: 146px
$check-ic-image: 'common-ic.png'
$check-ic: (0px, 8px, 0px, -8px, 16px, 13px, 29px, 146px, 'common-ic.png', 'check-ic', )
$discount-ic-name: 'discount-ic'
$discount-ic-x: 0px
$discount-ic-y: 117px
$discount-ic-offset-x: 0px
$discount-ic-offset-y: -117px
$discount-ic-width: 29px
$discount-ic-height: 29px
$discount-ic-total-width: 29px
$discount-ic-total-height: 146px
$discount-ic-image: 'common-ic.png'
$discount-ic: (0px, 117px, 0px, -117px, 29px, 29px, 29px, 146px, 'common-ic.png', 'discount-ic', )
$doc-ic-name: 'doc-ic'
$doc-ic-x: 0px
$doc-ic-y: 41px
$doc-ic-offset-x: 0px
$doc-ic-offset-y: -41px
$doc-ic-width: 24px
$doc-ic-height: 24px
$doc-ic-total-width: 29px
$doc-ic-total-height: 146px
$doc-ic-image: 'common-ic.png'
$doc-ic: (0px, 41px, 0px, -41px, 24px, 24px, 29px, 146px, 'common-ic.png', 'doc-ic', )
$ic-nav-down-name: 'ic-nav-down'
$ic-nav-down-x: 0px
$ic-nav-down-y: 0px
$ic-nav-down-offset-x: 0px
$ic-nav-down-offset-y: 0px
$ic-nav-down-width: 13px
$ic-nav-down-height: 8px
$ic-nav-down-total-width: 29px
$ic-nav-down-total-height: 146px
$ic-nav-down-image: 'common-ic.png'
$ic-nav-down: (0px, 0px, 0px, 0px, 13px, 8px, 29px, 146px, 'common-ic.png', 'ic-nav-down', )
$ic-place-name: 'ic-place'
$ic-place-x: 0px
$ic-place-y: 21px
$ic-place-offset-x: 0px
$ic-place-offset-y: -21px
$ic-place-width: 14px
$ic-place-height: 20px
$ic-place-total-width: 29px
$ic-place-total-height: 146px
$ic-place-image: 'common-ic.png'
$ic-place: (0px, 21px, 0px, -21px, 14px, 20px, 29px, 146px, 'common-ic.png', 'ic-place', )
$marker-name: 'marker'
$marker-x: 0px
$marker-y: 65px
$marker-offset-x: 0px
$marker-offset-y: -65px
$marker-width: 11px
$marker-height: 25px
$marker-total-width: 29px
$marker-total-height: 146px
$marker-image: 'common-ic.png'
$marker: (0px, 65px, 0px, -65px, 11px, 25px, 29px, 146px, 'common-ic.png', 'marker', )
$phone-ic-name: 'phone-ic'
$phone-ic-x: 0px
$phone-ic-y: 90px
$phone-ic-offset-x: 0px
$phone-ic-offset-y: -90px
$phone-ic-width: 26px
$phone-ic-height: 27px
$phone-ic-total-width: 29px
$phone-ic-total-height: 146px
$phone-ic-image: 'common-ic.png'
$phone-ic: (0px, 90px, 0px, -90px, 26px, 27px, 29px, 146px, 'common-ic.png', 'phone-ic', )
$spritesheet-width: 29px
$spritesheet-height: 146px
$spritesheet-image: 'common-ic.png'
$spritesheet-sprites: ($check-ic, $discount-ic, $doc-ic, $ic-nav-down, $ic-place, $marker, $phone-ic, )
$spritesheet: (29px, 146px, 'common-ic.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
